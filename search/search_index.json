{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Description This library contains useful data structures and algorithms that are commonly used in coding interviews. The goal of this project is to provide modules that can actually be used to solve interviewing problems. This project is NOT a code dump of solutions to interviewing problems. The classes and functions were designed to be compatible with LeetCode. Installation The pyinterview package can be installed directly using pip . pip install pyinterview Usage Users can import common data structures and algorithms from several different modules. For example: To manually construct a binary tree, import the TreeNode class from the trees module: from pyinterview.trees import TreeNode root = TreeNode(2) root.left = TreeNode(1) root.right = TreeNode(3) To construct a undirected graph adjacency list, import the undirected_adj_list function from the graphs module: from pyinterview.graphs import undirected_adj_list edges = [('A', 'B'), ('A', 'C'), ('C', 'D')] adj_list = undirected_adj_list(edges) Documentation The documentation is a work in progress, but contributions are welcome! pyinterview documentation","title":"Home"},{"location":"#description","text":"This library contains useful data structures and algorithms that are commonly used in coding interviews. The goal of this project is to provide modules that can actually be used to solve interviewing problems. This project is NOT a code dump of solutions to interviewing problems. The classes and functions were designed to be compatible with LeetCode.","title":"Description"},{"location":"#installation","text":"The pyinterview package can be installed directly using pip . pip install pyinterview","title":"Installation"},{"location":"#usage","text":"Users can import common data structures and algorithms from several different modules. For example: To manually construct a binary tree, import the TreeNode class from the trees module: from pyinterview.trees import TreeNode root = TreeNode(2) root.left = TreeNode(1) root.right = TreeNode(3) To construct a undirected graph adjacency list, import the undirected_adj_list function from the graphs module: from pyinterview.graphs import undirected_adj_list edges = [('A', 'B'), ('A', 'C'), ('C', 'D')] adj_list = undirected_adj_list(edges)","title":"Usage"},{"location":"#documentation","text":"The documentation is a work in progress, but contributions are welcome! pyinterview documentation","title":"Documentation"}]}